#include "TextPanel.h"
#include "../../include/padlock16x16-blue.xpm"
#include "EffectPanelUtils.h"

//(*InternalHeaders(TextPanel)
#include <wx/notebook.h>
#include <wx/sizer.h>
#include <wx/stattext.h>
#include <wx/textctrl.h>
#include <wx/checkbox.h>
#include <wx/bitmap.h>
#include <wx/slider.h>
#include <wx/settings.h>
#include <wx/choice.h>
#include <wx/bmpbuttn.h>
#include <wx/intl.h>
#include <wx/gbsizer.h>
#include <wx/image.h>
#include <wx/fontpicker.h>
#include <wx/string.h>
//*)

//(*IdInit(TextPanel)
const long TextPanel::ID_STATICTEXT53 = wxNewId();
const long TextPanel::ID_TEXTCTRL_Text_Line1 = wxNewId();
const long TextPanel::ID_FONTPICKER_Text_Font1 = wxNewId();
const long TextPanel::ID_BITMAPBUTTON_FONTPICKER_Text_Font1 = wxNewId();
const long TextPanel::ID_STATICTEXT79 = wxNewId();
const long TextPanel::ID_CHOICE_Text_Dir1 = wxNewId();
const long TextPanel::ID_BITMAPBUTTON_CHOICE_Text_Dir1 = wxNewId();
const long TextPanel::ID_CHECKBOX_TextToCenter1 = wxNewId();
const long TextPanel::ID_BITMAPBUTTON_TextToCenter1 = wxNewId();
const long TextPanel::ID_STATICTEXT28 = wxNewId();
const long TextPanel::IDD_SLIDER_Text_Speed1 = wxNewId();
const long TextPanel::ID_TEXTCTRL_Text_Speed1 = wxNewId();
const long TextPanel::ID_BITMAPBUTTON30 = wxNewId();
const long TextPanel::ID_STATICTEXT108 = wxNewId();
const long TextPanel::ID_CHOICE_Text_Effect1 = wxNewId();
const long TextPanel::ID_BITMAPBUTTON_CHOICE_Text_Effect1 = wxNewId();
const long TextPanel::ID_STATICTEXT99 = wxNewId();
const long TextPanel::ID_CHOICE_Text_Count1 = wxNewId();
const long TextPanel::ID_BITMAPBUTTON_CHOICE_Text_Count1 = wxNewId();
const long TextPanel::ID_CHECKBOX_Text_PixelOffsets1 = wxNewId();
const long TextPanel::ID_SLIDER_Text_XStart1 = wxNewId();
const long TextPanel::IDD_TEXTCTRL_Text_XStart1 = wxNewId();
const long TextPanel::IDD_TEXTCTRL_Text_YStart1 = wxNewId();
const long TextPanel::ID_SLIDER_Text_YStart1 = wxNewId();
const long TextPanel::IDD_PANEL6 = wxNewId();
const long TextPanel::ID_SLIDER_Text_XEnd1 = wxNewId();
const long TextPanel::IDD_TEXTCTRL_Text_XEnd1 = wxNewId();
const long TextPanel::IDD_TEXTCTRL_Text_YEnd1 = wxNewId();
const long TextPanel::ID_SLIDER_Text_YEnd1 = wxNewId();
const long TextPanel::IDD_PANEL17 = wxNewId();
const long TextPanel::IDD_NOTEBOOK1 = wxNewId();
const long TextPanel::ID_PANEL_Text1 = wxNewId();
const long TextPanel::ID_STATICTEXT54 = wxNewId();
const long TextPanel::ID_TEXTCTRL_Text_Line2 = wxNewId();
const long TextPanel::ID_FONTPICKER_Text_Font2 = wxNewId();
const long TextPanel::ID_BITMAPBUTTON_FONTPICKER_Text_Font2 = wxNewId();
const long TextPanel::ID_STATICTEXT57 = wxNewId();
const long TextPanel::ID_CHOICE_Text_Dir2 = wxNewId();
const long TextPanel::ID_BITMAPBUTTON_CHOICE_Text_Dir2 = wxNewId();
const long TextPanel::ID_CHECKBOX_TextToCenter2 = wxNewId();
const long TextPanel::ID_BITMAPBUTTON_Text2Center2 = wxNewId();
const long TextPanel::ID_STATICTEXT30 = wxNewId();
const long TextPanel::IDD_SLIDER_Text_Speed2 = wxNewId();
const long TextPanel::ID_TEXTCTRL_Text_Speed2 = wxNewId();
const long TextPanel::ID_BITMAPBUTTON29 = wxNewId();
const long TextPanel::ID_STATICTEXT109 = wxNewId();
const long TextPanel::ID_CHOICE_Text_Effect2 = wxNewId();
const long TextPanel::ID_BITMAPBUTTON_CHOICE_Text_Effect2 = wxNewId();
const long TextPanel::ID_STATICTEXT104 = wxNewId();
const long TextPanel::ID_CHOICE_Text_Count2 = wxNewId();
const long TextPanel::ID_BITMAPBUTTON_CHOICE_Text_Count2 = wxNewId();
const long TextPanel::ID_STATICTEXT103 = wxNewId();
const long TextPanel::ID_SLIDER_Text_Position2 = wxNewId();
const long TextPanel::IDD_TEXTCTRL_Text_Position2 = wxNewId();
const long TextPanel::ID_BITMAPBUTTON_SLIDER_Text_Position2 = wxNewId();
const long TextPanel::ID_PANEL_Text2 = wxNewId();
const long TextPanel::ID_STATICTEXT22 = wxNewId();
const long TextPanel::ID_TEXTCTRL_Text_Line3 = wxNewId();
const long TextPanel::ID_FONTPICKER_Text_Font3 = wxNewId();
const long TextPanel::ID_BITMAPBUTTON_FONTPICKER_Text_Font3 = wxNewId();
const long TextPanel::ID_STATICTEXT16 = wxNewId();
const long TextPanel::ID_CHOICE_Text_Dir3 = wxNewId();
const long TextPanel::ID_BITMAPBUTTON_CHOICE_Text_Dir3 = wxNewId();
const long TextPanel::ID_CHECKBOX_TextToCenter3 = wxNewId();
const long TextPanel::ID_BITMAPBUTTON_TextToCenter3 = wxNewId();
const long TextPanel::ID_STATICTEXT4 = wxNewId();
const long TextPanel::IDD_SLIDER_Text_Speed3 = wxNewId();
const long TextPanel::ID_TEXTCTRL_Text_Speed3 = wxNewId();
const long TextPanel::ID_BITMAPBUTTON27 = wxNewId();
const long TextPanel::ID_STATICTEXT17 = wxNewId();
const long TextPanel::ID_CHOICE_Text_Effect3 = wxNewId();
const long TextPanel::ID_BITMAPBUTTON_CHOICE_Text_Effect3 = wxNewId();
const long TextPanel::ID_STATICTEXT18 = wxNewId();
const long TextPanel::ID_CHOICE_Text_Count3 = wxNewId();
const long TextPanel::ID_BITMAPBUTTON_CHOICE_Text_Count3 = wxNewId();
const long TextPanel::ID_STATICTEXT19 = wxNewId();
const long TextPanel::ID_SLIDER_Text_Position3 = wxNewId();
const long TextPanel::IDD_TEXTCTRL_Text_Position3 = wxNewId();
const long TextPanel::ID_BITMAPBUTTON_SLIDER_Text_Position3 = wxNewId();
const long TextPanel::ID_PANEL_Text3 = wxNewId();
const long TextPanel::ID_STATICTEXT23 = wxNewId();
const long TextPanel::ID_TEXTCTRL_Text_Line4 = wxNewId();
const long TextPanel::ID_FONTPICKER_Text_Font4 = wxNewId();
const long TextPanel::ID_BITMAPBUTTON_FONTPICKER_Text_Font4 = wxNewId();
const long TextPanel::ID_STATICTEXT24 = wxNewId();
const long TextPanel::ID_CHOICE_Text_Dir4 = wxNewId();
const long TextPanel::ID_BITMAPBUTTON_CHOICE_Text_Dir4 = wxNewId();
const long TextPanel::ID_CHECKBOX_TextToCenter4 = wxNewId();
const long TextPanel::ID_BITMAPBUTTON_TextToCenter4 = wxNewId();
const long TextPanel::ID_STATICTEXT31 = wxNewId();
const long TextPanel::IDD_SLIDER_Text_Speed4 = wxNewId();
const long TextPanel::ID_TEXTCTRL_Text_Speed4 = wxNewId();
const long TextPanel::ID_BITMAPBUTTON28 = wxNewId();
const long TextPanel::ID_STATICTEXT29 = wxNewId();
const long TextPanel::ID_CHOICE_Text_Effect4 = wxNewId();
const long TextPanel::ID_BITMAPBUTTON_CHOICE_Text_Effect4 = wxNewId();
const long TextPanel::ID_STATICTEXT47 = wxNewId();
const long TextPanel::ID_CHOICE_Text_Count4 = wxNewId();
const long TextPanel::ID_BITMAPBUTTON_CHOICE_Text_Count4 = wxNewId();
const long TextPanel::ID_STATICTEXT48 = wxNewId();
const long TextPanel::ID_SLIDER_Text_Position4 = wxNewId();
const long TextPanel::IDD_TEXTCTRL_Text_Position4 = wxNewId();
const long TextPanel::ID_BITMAPBUTTON_SLIDER_Text_Position4 = wxNewId();
const long TextPanel::ID_PANEL_Text4 = wxNewId();
const long TextPanel::IDD_NOTEBOOK_Text = wxNewId();
//*)

BEGIN_EVENT_TABLE(TextPanel,wxPanel)
	//(*EventTable(TextPanel)
	//*)
END_EVENT_TABLE()

TextPanel::TextPanel(wxWindow* parent)
{
	//(*Initialize(TextPanel)
	wxSlider* Slider26;
	wxCheckBox* CheckBox_TextToCenter1;
	wxCheckBox* CheckBox_TextToCenter3;
	wxStaticText* StaticText213;
	wxStaticText* StaticText165;
	wxFontPickerCtrl* FontPickerCtrl1;
	wxTextCtrl* TextCtrl92;
	wxTextCtrl* TextCtrl74;
	wxSlider* Slider39;
	wxFlexGridSizer* FlexGridSizer122;
	wxSlider* Slider35;
	wxSlider* Slider28;
	wxTextCtrl* TextCtrl91;
	wxCheckBox* CheckBox_TextToCenter4;
	wxSlider* Slider27;
	wxNotebook* Notebook6;
	wxTextCtrl* TextCtrl71;
	wxFlexGridSizer* FlexGridSizer25;
	wxFontPickerCtrl* FontPickerCtrl4;
	wxFlexGridSizer* FlexGridSizer145;
	wxFontPickerCtrl* FontPickerCtrl3;
	wxCheckBox* CheckBox6;
	wxFlexGridSizer* FlexGridSizer66;
	wxFlexGridSizer* FlexGridSizer69;
	wxTextCtrl* TextCtrl94;
	wxStaticText* StaticText163;
	wxStaticText* StaticText162;
	wxCheckBox* CheckBox_TextToCenter2;
	wxTextCtrl* TextCtrl93;
	wxFlexGridSizer* FlexGridSizer143;
	wxGridBagSizer* GridBagSizer7;
	wxFlexGridSizer* FlexGridSizer74;
	wxFlexGridSizer* FlexGridSizer120;
	wxPanel* Panel16;
	wxFlexGridSizer* FlexGridSizer52;
	wxFlexGridSizer* FlexGridSizer29;
	wxTextCtrl* TextCtrl14;
	wxStaticText* StaticText164;
	wxFlexGridSizer* FlexGridSizer49;
	wxTextCtrl* TextCtrl13;
	wxStaticText* StaticText211;
	wxFlexGridSizer* FlexGridSizer144;
	wxFlexGridSizer* FlexGridSizer142;
	wxStaticText* StaticText212;
	wxFlexGridSizer* FlexGridSizer119;
	wxTextCtrl* TextCtrl72;
	wxNotebook* Notebook_Text1;
	wxSlider* Slider38;
	wxSlider* Slider37;
	wxFlexGridSizer* FlexGridSizer50;
	wxFlexGridSizer* FlexGridSizer141;
	wxFlexGridSizer* FlexGridSizer131;
	wxFlexGridSizer* FlexGridSizer46;
	wxTextCtrl* TextCtrl73;
	wxFlexGridSizer* FlexGridSizer48;
	wxFlexGridSizer* FlexGridSizer121;
	wxGridBagSizer* GridBagSizer6;
	wxSlider* Slider25;
	wxFlexGridSizer* FlexGridSizer65;
	wxTextCtrl* TextCtrl12;
	wxStaticText* StaticText214;
	wxFontPickerCtrl* FontPickerCtrl2;
	wxFlexGridSizer* FlexGridSizer67;

	Create(parent, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL, _T("wxID_ANY"));
	FlexGridSizer46 = new wxFlexGridSizer(0, 1, 0, 0);
	FlexGridSizer46->AddGrowableCol(0);
	Notebook_Text1 = new wxNotebook(this, IDD_NOTEBOOK_Text, wxDefaultPosition, wxDefaultSize, 0, _T("IDD_NOTEBOOK_Text"));
	Notebook_Text1->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_SCROLLBAR));
	Panel_Text1 = new wxPanel(Notebook_Text1, ID_PANEL_Text1, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL, _T("ID_PANEL_Text1"));
	FlexGridSizer69 = new wxFlexGridSizer(0, 1, 0, 0);
	FlexGridSizer69->AddGrowableCol(0);
	FlexGridSizer119 = new wxFlexGridSizer(0, 3, 0, 0);
	FlexGridSizer119->AddGrowableCol(1);
	StaticText53 = new wxStaticText(Panel_Text1, ID_STATICTEXT53, _("Text"), wxDefaultPosition, wxDefaultSize, 0, _T("ID_STATICTEXT53"));
	FlexGridSizer119->Add(StaticText53, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 2);
	TextCtrl_Text_Line1 = new wxTextCtrl(Panel_Text1, ID_TEXTCTRL_Text_Line1, wxEmptyString, wxDefaultPosition, wxDefaultSize, wxTE_PROCESS_ENTER, wxDefaultValidator, _T("ID_TEXTCTRL_Text_Line1"));
	TextCtrl_Text_Line1->SetMaxLength(256);
	FlexGridSizer119->Add(TextCtrl_Text_Line1, 1, wxALL|wxEXPAND, 2);
	FlexGridSizer119->Add(-1,-1,1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
	StaticText162 = new wxStaticText(Panel_Text1, wxID_ANY, _("Font"), wxDefaultPosition, wxDefaultSize, 0, _T("wxID_ANY"));
	FlexGridSizer119->Add(StaticText162, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 2);
	FontPickerCtrl1 = new wxFontPickerCtrl(Panel_Text1, ID_FONTPICKER_Text_Font1, wxNullFont, wxDefaultPosition, wxDefaultSize, wxFNTP_FONTDESC_AS_LABEL|wxFNTP_USEFONT_FOR_LABEL, wxDefaultValidator, _T("ID_FONTPICKER_Text_Font1"));
	FlexGridSizer119->Add(FontPickerCtrl1, 1, wxALL|wxEXPAND, 2);
	BitmapButton_TextFont1 = new wxBitmapButton(Panel_Text1, ID_BITMAPBUTTON_FONTPICKER_Text_Font1, padlock16x16_blue_xpm, wxDefaultPosition, wxSize(13,13), wxBU_AUTODRAW|wxNO_BORDER, wxDefaultValidator, _T("ID_BITMAPBUTTON_FONTPICKER_Text_Font1"));
	BitmapButton_TextFont1->SetDefault();
	BitmapButton_TextFont1->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_ACTIVECAPTION));
	FlexGridSizer119->Add(BitmapButton_TextFont1, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 1);
	StaticText78 = new wxStaticText(Panel_Text1, ID_STATICTEXT79, _("Movement"), wxDefaultPosition, wxDefaultSize, 0, _T("ID_STATICTEXT79"));
	FlexGridSizer119->Add(StaticText78, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 2);
	FlexGridSizer48 = new wxFlexGridSizer(0, 3, 0, 0);
	Choice_Text_Dir1 = new wxChoice(Panel_Text1, ID_CHOICE_Text_Dir1, wxDefaultPosition, wxDefaultSize, 0, 0, 0, wxDefaultValidator, _T("ID_CHOICE_Text_Dir1"));
	Choice_Text_Dir1->SetSelection( Choice_Text_Dir1->Append(_("none")) );
	Choice_Text_Dir1->Append(_("left"));
	Choice_Text_Dir1->Append(_("right"));
	Choice_Text_Dir1->Append(_("up"));
	Choice_Text_Dir1->Append(_("down"));
	Choice_Text_Dir1->Append(_("vector"));
	Choice_Text_Dir1->Append(_("up-left"));
	Choice_Text_Dir1->Append(_("down-left"));
	Choice_Text_Dir1->Append(_("up-right"));
	Choice_Text_Dir1->Append(_("down-right"));
	Choice_Text_Dir1->Append(_("wavey"));
	FlexGridSizer48->Add(Choice_Text_Dir1, 1, wxALL|wxEXPAND, 2);
	BitmapButton_TextDir1 = new wxBitmapButton(Panel_Text1, ID_BITMAPBUTTON_CHOICE_Text_Dir1, padlock16x16_blue_xpm, wxDefaultPosition, wxSize(13,13), wxBU_AUTODRAW|wxNO_BORDER, wxDefaultValidator, _T("ID_BITMAPBUTTON_CHOICE_Text_Dir1"));
	BitmapButton_TextDir1->SetDefault();
	BitmapButton_TextDir1->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_ACTIVECAPTION));
	FlexGridSizer48->Add(BitmapButton_TextDir1, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 1);
	CheckBox_TextToCenter1 = new wxCheckBox(Panel_Text1, ID_CHECKBOX_TextToCenter1, _("C"), wxDefaultPosition, wxDefaultSize, 0, wxDefaultValidator, _T("ID_CHECKBOX_TextToCenter1"));
	CheckBox_TextToCenter1->SetValue(false);
	CheckBox_TextToCenter1->SetToolTip(_("Move to center and stop"));
	FlexGridSizer48->Add(CheckBox_TextToCenter1, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
	FlexGridSizer119->Add(FlexGridSizer48, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 1);
	BitmapButton_TextToCenter1 = new wxBitmapButton(Panel_Text1, ID_BITMAPBUTTON_TextToCenter1, padlock16x16_blue_xpm, wxDefaultPosition, wxSize(13,13), wxBU_AUTODRAW|wxNO_BORDER, wxDefaultValidator, _T("ID_BITMAPBUTTON_TextToCenter1"));
	BitmapButton_TextToCenter1->SetDefault();
	BitmapButton_TextToCenter1->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_ACTIVECAPTION));
	FlexGridSizer119->Add(BitmapButton_TextToCenter1, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 2);
	StaticText186 = new wxStaticText(Panel_Text1, ID_STATICTEXT28, _("Speed"), wxDefaultPosition, wxDefaultSize, 0, _T("ID_STATICTEXT28"));
	FlexGridSizer119->Add(StaticText186, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 2);
	FlexGridSizer66 = new wxFlexGridSizer(0, 2, 0, 0);
	FlexGridSizer66->AddGrowableCol(0);
	Slider26 = new wxSlider(Panel_Text1, IDD_SLIDER_Text_Speed1, 10, 0, 50, wxDefaultPosition, wxDefaultSize, 0, wxDefaultValidator, _T("IDD_SLIDER_Text_Speed1"));
	FlexGridSizer66->Add(Slider26, 1, wxALL|wxEXPAND, 1);
	TextCtrl72 = new wxTextCtrl(Panel_Text1, ID_TEXTCTRL_Text_Speed1, _("10"), wxDefaultPosition, wxDLG_UNIT(Panel_Text1,wxSize(20,-1)), 0, wxDefaultValidator, _T("ID_TEXTCTRL_Text_Speed1"));
	TextCtrl72->SetMaxLength(3);
	FlexGridSizer66->Add(TextCtrl72, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
	FlexGridSizer119->Add(FlexGridSizer66, 1, wxALL|wxEXPAND, 1);
	BitmapButton12 = new wxBitmapButton(Panel_Text1, ID_BITMAPBUTTON30, padlock16x16_blue_xpm, wxDefaultPosition, wxSize(13,13), wxBU_AUTODRAW|wxNO_BORDER, wxDefaultValidator, _T("ID_BITMAPBUTTON30"));
	BitmapButton12->SetDefault();
	BitmapButton12->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_ACTIVECAPTION));
	FlexGridSizer119->Add(BitmapButton12, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
	StaticText107 = new wxStaticText(Panel_Text1, ID_STATICTEXT108, _("Effect"), wxDefaultPosition, wxDefaultSize, 0, _T("ID_STATICTEXT108"));
	FlexGridSizer119->Add(StaticText107, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 2);
	Choice_Text_Effect1 = new wxChoice(Panel_Text1, ID_CHOICE_Text_Effect1, wxDefaultPosition, wxDefaultSize, 0, 0, 0, wxDefaultValidator, _T("ID_CHOICE_Text_Effect1"));
	Choice_Text_Effect1->SetSelection( Choice_Text_Effect1->Append(_("normal")) );
	Choice_Text_Effect1->Append(_("vert text up"));
	Choice_Text_Effect1->Append(_("vert text down"));
	Choice_Text_Effect1->Append(_("rotate up 45"));
	Choice_Text_Effect1->Append(_("rotate up 90"));
	Choice_Text_Effect1->Append(_("rotate down 45"));
	Choice_Text_Effect1->Append(_("rotate down 90"));
	FlexGridSizer119->Add(Choice_Text_Effect1, 1, wxALL|wxEXPAND, 2);
	BitmapButton_TextEffect1 = new wxBitmapButton(Panel_Text1, ID_BITMAPBUTTON_CHOICE_Text_Effect1, padlock16x16_blue_xpm, wxDefaultPosition, wxSize(13,13), wxBU_AUTODRAW|wxNO_BORDER, wxDefaultValidator, _T("ID_BITMAPBUTTON_CHOICE_Text_Effect1"));
	BitmapButton_TextEffect1->SetDefault();
	BitmapButton_TextEffect1->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_ACTIVECAPTION));
	FlexGridSizer119->Add(BitmapButton_TextEffect1, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 1);
	StaticText98 = new wxStaticText(Panel_Text1, ID_STATICTEXT99, _("Count down"), wxDefaultPosition, wxDefaultSize, 0, _T("ID_STATICTEXT99"));
	FlexGridSizer119->Add(StaticText98, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 2);
	Choice_Text_Count1 = new wxChoice(Panel_Text1, ID_CHOICE_Text_Count1, wxDefaultPosition, wxDefaultSize, 0, 0, 0, wxDefaultValidator, _T("ID_CHOICE_Text_Count1"));
	Choice_Text_Count1->SetSelection( Choice_Text_Count1->Append(_("none")) );
	Choice_Text_Count1->Append(_("seconds"));
	Choice_Text_Count1->Append(_("to date \'d h m s\'"));
	Choice_Text_Count1->Append(_("to date \'h:m:s\'"));
	Choice_Text_Count1->Append(_("to date \'m\' or \'s\'"));
	Choice_Text_Count1->Append(_("to date \'s\'"));
	Choice_Text_Count1->Append(_("!to date!%fmt"));
	FlexGridSizer119->Add(Choice_Text_Count1, 1, wxALL|wxEXPAND, 2);
	BitmapButton_TextCount1 = new wxBitmapButton(Panel_Text1, ID_BITMAPBUTTON_CHOICE_Text_Count1, padlock16x16_blue_xpm, wxDefaultPosition, wxSize(13,13), wxBU_AUTODRAW|wxNO_BORDER, wxDefaultValidator, _T("ID_BITMAPBUTTON_CHOICE_Text_Count1"));
	BitmapButton_TextCount1->SetDefault();
	BitmapButton_TextCount1->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_ACTIVECAPTION));
	FlexGridSizer119->Add(BitmapButton_TextCount1, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 1);
	FlexGridSizer69->Add(FlexGridSizer119, 1, wxALL|wxEXPAND, 1);
	FlexGridSizer141 = new wxFlexGridSizer(0, 1, 0, 0);
	FlexGridSizer141->AddGrowableCol(0);
	CheckBox6 = new wxCheckBox(Panel_Text1, ID_CHECKBOX_Text_PixelOffsets1, _("Offsets In Pixels"), wxDefaultPosition, wxDefaultSize, 0, wxDefaultValidator, _T("ID_CHECKBOX_Text_PixelOffsets1"));
	CheckBox6->SetValue(false);
	FlexGridSizer141->Add(CheckBox6, 1, wxALL|wxALIGN_LEFT|wxALIGN_TOP, 5);
	Notebook6 = new wxNotebook(Panel_Text1, IDD_NOTEBOOK1, wxDefaultPosition, wxDefaultSize, 0, _T("IDD_NOTEBOOK1"));
	Panel16 = new wxPanel(Notebook6, IDD_PANEL6, wxPoint(15,49), wxDefaultSize, wxTAB_TRAVERSAL, _T("IDD_PANEL6"));
	FlexGridSizer142 = new wxFlexGridSizer(0, 2, 0, 0);
	FlexGridSizer142->AddGrowableCol(0);
	FlexGridSizer143 = new wxFlexGridSizer(0, 2, 0, 0);
	FlexGridSizer143->AddGrowableCol(1);
	StaticText211 = new wxStaticText(Panel16, wxID_ANY, _("X"), wxDefaultPosition, wxDefaultSize, 0, _T("wxID_ANY"));
	FlexGridSizer143->Add(StaticText211, 1, wxALL|wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL, 5);
	Slider35 = new wxSlider(Panel16, ID_SLIDER_Text_XStart1, 0, -200, 200, wxDefaultPosition, wxDefaultSize, 0, wxDefaultValidator, _T("ID_SLIDER_Text_XStart1"));
	FlexGridSizer143->Add(Slider35, 1, wxALL|wxEXPAND, 5);
	FlexGridSizer143->Add(-1,-1,1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
	TextCtrl91 = new wxTextCtrl(Panel16, IDD_TEXTCTRL_Text_XStart1, _("0"), wxDefaultPosition, wxDLG_UNIT(Panel16,wxSize(20,-1)), wxTE_CENTRE, wxDefaultValidator, _T("IDD_TEXTCTRL_Text_XStart1"));
	TextCtrl91->SetMaxLength(3);
	FlexGridSizer143->Add(TextCtrl91, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
	FlexGridSizer142->Add(FlexGridSizer143, 1, wxALL|wxEXPAND, 5);
	GridBagSizer6 = new wxGridBagSizer(0, 0);
	StaticText212 = new wxStaticText(Panel16, wxID_ANY, _("Y"), wxDefaultPosition, wxDefaultSize, 0, _T("wxID_ANY"));
	GridBagSizer6->Add(StaticText212, wxGBPosition(1, 0), wxDefaultSpan, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
	TextCtrl92 = new wxTextCtrl(Panel16, IDD_TEXTCTRL_Text_YStart1, _("0"), wxDefaultPosition, wxDLG_UNIT(Panel16,wxSize(20,-1)), wxTE_CENTRE, wxDefaultValidator, _T("IDD_TEXTCTRL_Text_YStart1"));
	TextCtrl92->SetMaxLength(3);
	GridBagSizer6->Add(TextCtrl92, wxGBPosition(2, 0), wxDefaultSpan, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
	Slider37 = new wxSlider(Panel16, ID_SLIDER_Text_YStart1, 0, -200, 200, wxDefaultPosition, wxDefaultSize, wxSL_VERTICAL|wxSL_INVERSE, wxDefaultValidator, _T("ID_SLIDER_Text_YStart1"));
	GridBagSizer6->Add(Slider37, wxGBPosition(0, 1), wxGBSpan(4, 1), wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
	FlexGridSizer142->Add(GridBagSizer6, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
	Panel16->SetSizer(FlexGridSizer142);
	FlexGridSizer142->Fit(Panel16);
	FlexGridSizer142->SetSizeHints(Panel16);
	Panel17 = new wxPanel(Notebook6, IDD_PANEL17, wxPoint(104,13), wxDefaultSize, wxTAB_TRAVERSAL, _T("IDD_PANEL17"));
	FlexGridSizer144 = new wxFlexGridSizer(0, 2, 0, 0);
	FlexGridSizer144->AddGrowableCol(0);
	FlexGridSizer145 = new wxFlexGridSizer(0, 2, 0, 0);
	FlexGridSizer145->AddGrowableCol(1);
	StaticText213 = new wxStaticText(Panel17, wxID_ANY, _("X"), wxDefaultPosition, wxDefaultSize, 0, _T("wxID_ANY"));
	FlexGridSizer145->Add(StaticText213, 1, wxALL|wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL, 5);
	Slider38 = new wxSlider(Panel17, ID_SLIDER_Text_XEnd1, 0, -200, 200, wxDefaultPosition, wxDefaultSize, 0, wxDefaultValidator, _T("ID_SLIDER_Text_XEnd1"));
	FlexGridSizer145->Add(Slider38, 1, wxALL|wxEXPAND, 5);
	FlexGridSizer145->Add(-1,-1,1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
	TextCtrl93 = new wxTextCtrl(Panel17, IDD_TEXTCTRL_Text_XEnd1, _("0"), wxDefaultPosition, wxDLG_UNIT(Panel17,wxSize(20,-1)), wxTE_CENTRE, wxDefaultValidator, _T("IDD_TEXTCTRL_Text_XEnd1"));
	TextCtrl93->SetMaxLength(3);
	FlexGridSizer145->Add(TextCtrl93, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
	FlexGridSizer144->Add(FlexGridSizer145, 1, wxALL|wxEXPAND, 5);
	GridBagSizer7 = new wxGridBagSizer(0, 0);
	StaticText214 = new wxStaticText(Panel17, wxID_ANY, _("Y"), wxDefaultPosition, wxDefaultSize, 0, _T("wxID_ANY"));
	GridBagSizer7->Add(StaticText214, wxGBPosition(1, 0), wxDefaultSpan, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
	TextCtrl94 = new wxTextCtrl(Panel17, IDD_TEXTCTRL_Text_YEnd1, _("0"), wxDefaultPosition, wxDLG_UNIT(Panel17,wxSize(20,-1)), wxTE_CENTRE, wxDefaultValidator, _T("IDD_TEXTCTRL_Text_YEnd1"));
	TextCtrl94->SetMaxLength(3);
	GridBagSizer7->Add(TextCtrl94, wxGBPosition(2, 0), wxDefaultSpan, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
	Slider39 = new wxSlider(Panel17, ID_SLIDER_Text_YEnd1, 0, -200, 200, wxDefaultPosition, wxDefaultSize, wxSL_VERTICAL|wxSL_INVERSE, wxDefaultValidator, _T("ID_SLIDER_Text_YEnd1"));
	GridBagSizer7->Add(Slider39, wxGBPosition(0, 1), wxGBSpan(4, 1), wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
	FlexGridSizer144->Add(GridBagSizer7, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
	Panel17->SetSizer(FlexGridSizer144);
	FlexGridSizer144->Fit(Panel17);
	FlexGridSizer144->SetSizeHints(Panel17);
	Notebook6->AddPage(Panel16, _("Start Position"), false);
	Notebook6->AddPage(Panel17, _("End Position"), false);
	FlexGridSizer141->Add(Notebook6, 1, wxALL|wxEXPAND, 5);
	FlexGridSizer69->Add(FlexGridSizer141, 1, wxALL|wxEXPAND, 1);
	Panel_Text1->SetSizer(FlexGridSizer69);
	FlexGridSizer69->Fit(Panel_Text1);
	FlexGridSizer69->SetSizeHints(Panel_Text1);
	Panel_Text2 = new wxPanel(Notebook_Text1, ID_PANEL_Text2, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL, _T("ID_PANEL_Text2"));
	FlexGridSizer74 = new wxFlexGridSizer(0, 3, 0, 0);
	FlexGridSizer74->AddGrowableCol(1);
	StaticText54 = new wxStaticText(Panel_Text2, ID_STATICTEXT54, _("Text"), wxDefaultPosition, wxDefaultSize, 0, _T("ID_STATICTEXT54"));
	FlexGridSizer74->Add(StaticText54, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 2);
	TextCtrl_Text_Line2 = new wxTextCtrl(Panel_Text2, ID_TEXTCTRL_Text_Line2, wxEmptyString, wxDefaultPosition, wxDefaultSize, wxTE_PROCESS_ENTER, wxDefaultValidator, _T("ID_TEXTCTRL_Text_Line2"));
	TextCtrl_Text_Line2->SetMaxLength(256);
	FlexGridSizer74->Add(TextCtrl_Text_Line2, 1, wxALL|wxEXPAND, 2);
	FlexGridSizer74->Add(-1,-1,1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
	StaticText163 = new wxStaticText(Panel_Text2, wxID_ANY, _("Font"), wxDefaultPosition, wxDefaultSize, 0, _T("wxID_ANY"));
	FlexGridSizer74->Add(StaticText163, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 2);
	FontPickerCtrl2 = new wxFontPickerCtrl(Panel_Text2, ID_FONTPICKER_Text_Font2, wxNullFont, wxDefaultPosition, wxDefaultSize, wxFNTP_FONTDESC_AS_LABEL|wxFNTP_USEFONT_FOR_LABEL, wxDefaultValidator, _T("ID_FONTPICKER_Text_Font2"));
	FlexGridSizer74->Add(FontPickerCtrl2, 1, wxALL|wxEXPAND, 2);
	BitmapButton_TextFont2 = new wxBitmapButton(Panel_Text2, ID_BITMAPBUTTON_FONTPICKER_Text_Font2, padlock16x16_blue_xpm, wxDefaultPosition, wxSize(13,13), wxBU_AUTODRAW|wxNO_BORDER, wxDefaultValidator, _T("ID_BITMAPBUTTON_FONTPICKER_Text_Font2"));
	BitmapButton_TextFont2->SetDefault();
	BitmapButton_TextFont2->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_ACTIVECAPTION));
	FlexGridSizer74->Add(BitmapButton_TextFont2, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 1);
	StaticText57 = new wxStaticText(Panel_Text2, ID_STATICTEXT57, _("Movement"), wxDefaultPosition, wxDefaultSize, 0, _T("ID_STATICTEXT57"));
	FlexGridSizer74->Add(StaticText57, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 2);
	FlexGridSizer49 = new wxFlexGridSizer(0, 3, 0, 0);
	Choice_Text_Dir2 = new wxChoice(Panel_Text2, ID_CHOICE_Text_Dir2, wxDefaultPosition, wxDefaultSize, 0, 0, 0, wxDefaultValidator, _T("ID_CHOICE_Text_Dir2"));
	Choice_Text_Dir2->SetSelection( Choice_Text_Dir2->Append(_("left")) );
	Choice_Text_Dir2->Append(_("right"));
	Choice_Text_Dir2->Append(_("up"));
	Choice_Text_Dir2->Append(_("down"));
	Choice_Text_Dir2->Append(_("none"));
	Choice_Text_Dir2->Append(_("up-left"));
	Choice_Text_Dir2->Append(_("down-left"));
	Choice_Text_Dir2->Append(_("up-right"));
	Choice_Text_Dir2->Append(_("down-right"));
	Choice_Text_Dir2->Append(_("wavey L-R/up-down"));
	FlexGridSizer49->Add(Choice_Text_Dir2, 1, wxALL|wxEXPAND, 2);
	BitmapButton_TextDir2 = new wxBitmapButton(Panel_Text2, ID_BITMAPBUTTON_CHOICE_Text_Dir2, padlock16x16_blue_xpm, wxDefaultPosition, wxSize(13,13), wxBU_AUTODRAW|wxNO_BORDER, wxDefaultValidator, _T("ID_BITMAPBUTTON_CHOICE_Text_Dir2"));
	BitmapButton_TextDir2->SetDefault();
	BitmapButton_TextDir2->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_ACTIVECAPTION));
	FlexGridSizer49->Add(BitmapButton_TextDir2, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 1);
	CheckBox_TextToCenter2 = new wxCheckBox(Panel_Text2, ID_CHECKBOX_TextToCenter2, _("C"), wxDefaultPosition, wxDefaultSize, 0, wxDefaultValidator, _T("ID_CHECKBOX_TextToCenter2"));
	CheckBox_TextToCenter2->SetValue(false);
	CheckBox_TextToCenter2->SetToolTip(_("Move to center and stop"));
	FlexGridSizer49->Add(CheckBox_TextToCenter2, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
	FlexGridSizer74->Add(FlexGridSizer49, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 1);
	BitmapButton_TextToCenter2 = new wxBitmapButton(Panel_Text2, ID_BITMAPBUTTON_Text2Center2, padlock16x16_blue_xpm, wxDefaultPosition, wxSize(13,13), wxBU_AUTODRAW|wxNO_BORDER, wxDefaultValidator, _T("ID_BITMAPBUTTON_Text2Center2"));
	BitmapButton_TextToCenter2->SetDefault();
	BitmapButton_TextToCenter2->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_ACTIVECAPTION));
	FlexGridSizer74->Add(BitmapButton_TextToCenter2, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
	StaticText187 = new wxStaticText(Panel_Text2, ID_STATICTEXT30, _("Speed"), wxDefaultPosition, wxDefaultSize, 0, _T("ID_STATICTEXT30"));
	FlexGridSizer74->Add(StaticText187, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 2);
	FlexGridSizer67 = new wxFlexGridSizer(0, 2, 0, 0);
	FlexGridSizer67->AddGrowableCol(0);
	Slider27 = new wxSlider(Panel_Text2, IDD_SLIDER_Text_Speed2, 10, 0, 50, wxDefaultPosition, wxDefaultSize, 0, wxDefaultValidator, _T("IDD_SLIDER_Text_Speed2"));
	FlexGridSizer67->Add(Slider27, 1, wxALL|wxEXPAND, 1);
	TextCtrl73 = new wxTextCtrl(Panel_Text2, ID_TEXTCTRL_Text_Speed2, _("10"), wxDefaultPosition, wxDLG_UNIT(Panel_Text2,wxSize(20,-1)), 0, wxDefaultValidator, _T("ID_TEXTCTRL_Text_Speed2"));
	TextCtrl73->SetMaxLength(3);
	FlexGridSizer67->Add(TextCtrl73, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
	FlexGridSizer74->Add(FlexGridSizer67, 1, wxALL|wxEXPAND, 1);
	BitmapButton11 = new wxBitmapButton(Panel_Text2, ID_BITMAPBUTTON29, padlock16x16_blue_xpm, wxDefaultPosition, wxSize(13,13), wxBU_AUTODRAW|wxNO_BORDER, wxDefaultValidator, _T("ID_BITMAPBUTTON29"));
	BitmapButton11->SetDefault();
	BitmapButton11->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_ACTIVECAPTION));
	FlexGridSizer74->Add(BitmapButton11, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
	StaticText108 = new wxStaticText(Panel_Text2, ID_STATICTEXT109, _("Effect"), wxDefaultPosition, wxDefaultSize, 0, _T("ID_STATICTEXT109"));
	FlexGridSizer74->Add(StaticText108, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 2);
	Choice_Text_Effect2 = new wxChoice(Panel_Text2, ID_CHOICE_Text_Effect2, wxDefaultPosition, wxDefaultSize, 0, 0, 0, wxDefaultValidator, _T("ID_CHOICE_Text_Effect2"));
	Choice_Text_Effect2->SetSelection( Choice_Text_Effect2->Append(_("normal")) );
	Choice_Text_Effect2->Append(_("vert text up"));
	Choice_Text_Effect2->Append(_("vert text down"));
	Choice_Text_Effect2->Append(_("rotate up 45"));
	Choice_Text_Effect2->Append(_("rotate up 90"));
	Choice_Text_Effect2->Append(_("rotate down 45"));
	Choice_Text_Effect2->Append(_("rotate down 90"));
	FlexGridSizer74->Add(Choice_Text_Effect2, 1, wxALL|wxEXPAND, 2);
	BitmapButton_TextEffect2 = new wxBitmapButton(Panel_Text2, ID_BITMAPBUTTON_CHOICE_Text_Effect2, padlock16x16_blue_xpm, wxDefaultPosition, wxSize(13,13), wxBU_AUTODRAW|wxNO_BORDER, wxDefaultValidator, _T("ID_BITMAPBUTTON_CHOICE_Text_Effect2"));
	BitmapButton_TextEffect2->SetDefault();
	BitmapButton_TextEffect2->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_ACTIVECAPTION));
	FlexGridSizer74->Add(BitmapButton_TextEffect2, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 1);
	StaticText103 = new wxStaticText(Panel_Text2, ID_STATICTEXT104, _("Count down"), wxDefaultPosition, wxDefaultSize, 0, _T("ID_STATICTEXT104"));
	FlexGridSizer74->Add(StaticText103, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 2);
	Choice_Text_Count2 = new wxChoice(Panel_Text2, ID_CHOICE_Text_Count2, wxDefaultPosition, wxDefaultSize, 0, 0, 0, wxDefaultValidator, _T("ID_CHOICE_Text_Count2"));
	Choice_Text_Count2->SetSelection( Choice_Text_Count2->Append(_("none")) );
	Choice_Text_Count2->Append(_("seconds"));
	Choice_Text_Count2->Append(_("to date \'d h m s\'"));
	Choice_Text_Count2->Append(_("to date \'h:m:s\'"));
	Choice_Text_Count2->Append(_("to date \'m\' or \'s\'"));
	Choice_Text_Count2->Append(_("to date \'s\'"));
	Choice_Text_Count2->Append(_("!to date!%fmt"));
	FlexGridSizer74->Add(Choice_Text_Count2, 1, wxALL|wxEXPAND, 2);
	BitmapButton_TextCount2 = new wxBitmapButton(Panel_Text2, ID_BITMAPBUTTON_CHOICE_Text_Count2, padlock16x16_blue_xpm, wxDefaultPosition, wxSize(13,13), wxBU_AUTODRAW|wxNO_BORDER, wxDefaultValidator, _T("ID_BITMAPBUTTON_CHOICE_Text_Count2"));
	BitmapButton_TextCount2->SetDefault();
	BitmapButton_TextCount2->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_ACTIVECAPTION));
	FlexGridSizer74->Add(BitmapButton_TextCount2, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 1);
	StaticText102 = new wxStaticText(Panel_Text2, ID_STATICTEXT103, _("Position"), wxDefaultPosition, wxDefaultSize, 0, _T("ID_STATICTEXT103"));
	FlexGridSizer74->Add(StaticText102, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 2);
	FlexGridSizer120 = new wxFlexGridSizer(0, 2, 0, 0);
	FlexGridSizer120->AddGrowableCol(0);
	Slider_Text_Position2 = new wxSlider(Panel_Text2, ID_SLIDER_Text_Position2, 50, 0, 100, wxDefaultPosition, wxDefaultSize, 0, wxDefaultValidator, _T("ID_SLIDER_Text_Position2"));
	FlexGridSizer120->Add(Slider_Text_Position2, 1, wxALL|wxEXPAND, 1);
	TextCtrl12 = new wxTextCtrl(Panel_Text2, IDD_TEXTCTRL_Text_Position2, _("50"), wxDefaultPosition, wxDLG_UNIT(Panel_Text2,wxSize(20,-1)), 0, wxDefaultValidator, _T("IDD_TEXTCTRL_Text_Position2"));
	TextCtrl12->SetMaxLength(3);
	FlexGridSizer120->Add(TextCtrl12, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
	FlexGridSizer74->Add(FlexGridSizer120, 1, wxALL|wxEXPAND, 1);
	BitmapButton_TextPosition2 = new wxBitmapButton(Panel_Text2, ID_BITMAPBUTTON_SLIDER_Text_Position2, padlock16x16_blue_xpm, wxDefaultPosition, wxSize(13,13), wxBU_AUTODRAW|wxNO_BORDER, wxDefaultValidator, _T("ID_BITMAPBUTTON_SLIDER_Text_Position2"));
	BitmapButton_TextPosition2->SetDefault();
	BitmapButton_TextPosition2->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_ACTIVECAPTION));
	FlexGridSizer74->Add(BitmapButton_TextPosition2, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 1);
	Panel_Text2->SetSizer(FlexGridSizer74);
	FlexGridSizer74->Fit(Panel_Text2);
	FlexGridSizer74->SetSizeHints(Panel_Text2);
	Panel_Text3 = new wxPanel(Notebook_Text1, ID_PANEL_Text3, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL, _T("ID_PANEL_Text3"));
	FlexGridSizer25 = new wxFlexGridSizer(0, 3, 0, 0);
	FlexGridSizer25->AddGrowableCol(1);
	StaticText19 = new wxStaticText(Panel_Text3, ID_STATICTEXT22, _("Text"), wxDefaultPosition, wxDefaultSize, 0, _T("ID_STATICTEXT22"));
	FlexGridSizer25->Add(StaticText19, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 2);
	TextCtrl_Text_Line3 = new wxTextCtrl(Panel_Text3, ID_TEXTCTRL_Text_Line3, wxEmptyString, wxDefaultPosition, wxDefaultSize, wxTE_PROCESS_ENTER, wxDefaultValidator, _T("ID_TEXTCTRL_Text_Line3"));
	TextCtrl_Text_Line3->SetMaxLength(256);
	FlexGridSizer25->Add(TextCtrl_Text_Line3, 1, wxALL|wxEXPAND, 2);
	FlexGridSizer25->Add(-1,-1,1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
	StaticText164 = new wxStaticText(Panel_Text3, wxID_ANY, _("Font"), wxDefaultPosition, wxDefaultSize, 0, _T("wxID_ANY"));
	FlexGridSizer25->Add(StaticText164, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 2);
	FontPickerCtrl3 = new wxFontPickerCtrl(Panel_Text3, ID_FONTPICKER_Text_Font3, wxNullFont, wxDefaultPosition, wxDefaultSize, wxFNTP_FONTDESC_AS_LABEL|wxFNTP_USEFONT_FOR_LABEL, wxDefaultValidator, _T("ID_FONTPICKER_Text_Font3"));
	FlexGridSizer25->Add(FontPickerCtrl3, 1, wxALL|wxEXPAND, 2);
	BitmapButton_TextFont3 = new wxBitmapButton(Panel_Text3, ID_BITMAPBUTTON_FONTPICKER_Text_Font3, padlock16x16_blue_xpm, wxDefaultPosition, wxSize(13,13), wxBU_AUTODRAW|wxNO_BORDER, wxDefaultValidator, _T("ID_BITMAPBUTTON_FONTPICKER_Text_Font3"));
	BitmapButton_TextFont3->SetDefault();
	BitmapButton_TextFont3->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_ACTIVECAPTION));
	FlexGridSizer25->Add(BitmapButton_TextFont3, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 1);
	StaticText15 = new wxStaticText(Panel_Text3, ID_STATICTEXT16, _("Movement"), wxDefaultPosition, wxDefaultSize, 0, _T("ID_STATICTEXT16"));
	FlexGridSizer25->Add(StaticText15, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 2);
	FlexGridSizer50 = new wxFlexGridSizer(0, 3, 0, 0);
	Choice_Text_Dir3 = new wxChoice(Panel_Text3, ID_CHOICE_Text_Dir3, wxDefaultPosition, wxDefaultSize, 0, 0, 0, wxDefaultValidator, _T("ID_CHOICE_Text_Dir3"));
	Choice_Text_Dir3->SetSelection( Choice_Text_Dir3->Append(_("left")) );
	Choice_Text_Dir3->Append(_("right"));
	Choice_Text_Dir3->Append(_("up"));
	Choice_Text_Dir3->Append(_("down"));
	Choice_Text_Dir3->Append(_("none"));
	Choice_Text_Dir3->Append(_("up-left"));
	Choice_Text_Dir3->Append(_("down-left"));
	Choice_Text_Dir3->Append(_("up-right"));
	Choice_Text_Dir3->Append(_("down-right"));
	Choice_Text_Dir3->Append(_("wavey L-R/up-down"));
	FlexGridSizer50->Add(Choice_Text_Dir3, 1, wxALL|wxEXPAND, 2);
	BitmapButton_TextDir3 = new wxBitmapButton(Panel_Text3, ID_BITMAPBUTTON_CHOICE_Text_Dir3, padlock16x16_blue_xpm, wxDefaultPosition, wxSize(13,13), wxBU_AUTODRAW|wxNO_BORDER, wxDefaultValidator, _T("ID_BITMAPBUTTON_CHOICE_Text_Dir3"));
	BitmapButton_TextDir3->SetDefault();
	BitmapButton_TextDir3->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_ACTIVECAPTION));
	FlexGridSizer50->Add(BitmapButton_TextDir3, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 1);
	CheckBox_TextToCenter3 = new wxCheckBox(Panel_Text3, ID_CHECKBOX_TextToCenter3, _("C"), wxDefaultPosition, wxDefaultSize, 0, wxDefaultValidator, _T("ID_CHECKBOX_TextToCenter3"));
	CheckBox_TextToCenter3->SetValue(false);
	CheckBox_TextToCenter3->SetToolTip(_("Move to center and stop"));
	FlexGridSizer50->Add(CheckBox_TextToCenter3, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
	FlexGridSizer25->Add(FlexGridSizer50, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 1);
	BitmapButton_TextToCenter3 = new wxBitmapButton(Panel_Text3, ID_BITMAPBUTTON_TextToCenter3, padlock16x16_blue_xpm, wxDefaultPosition, wxSize(13,13), wxBU_AUTODRAW|wxNO_BORDER, wxDefaultValidator, _T("ID_BITMAPBUTTON_TextToCenter3"));
	BitmapButton_TextToCenter3->SetDefault();
	BitmapButton_TextToCenter3->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_ACTIVECAPTION));
	FlexGridSizer25->Add(BitmapButton_TextToCenter3, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
	StaticText185 = new wxStaticText(Panel_Text3, ID_STATICTEXT4, _("Speed"), wxDefaultPosition, wxDefaultSize, 0, _T("ID_STATICTEXT4"));
	FlexGridSizer25->Add(StaticText185, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 2);
	FlexGridSizer65 = new wxFlexGridSizer(0, 2, 0, 0);
	FlexGridSizer65->AddGrowableCol(0);
	Slider25 = new wxSlider(Panel_Text3, IDD_SLIDER_Text_Speed3, 10, 0, 50, wxDefaultPosition, wxDefaultSize, 0, wxDefaultValidator, _T("IDD_SLIDER_Text_Speed3"));
	FlexGridSizer65->Add(Slider25, 1, wxALL|wxEXPAND, 1);
	TextCtrl71 = new wxTextCtrl(Panel_Text3, ID_TEXTCTRL_Text_Speed3, _("10"), wxDefaultPosition, wxDLG_UNIT(Panel_Text3,wxSize(20,-1)), 0, wxDefaultValidator, _T("ID_TEXTCTRL_Text_Speed3"));
	TextCtrl71->SetMaxLength(3);
	FlexGridSizer65->Add(TextCtrl71, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
	FlexGridSizer25->Add(FlexGridSizer65, 1, wxALL|wxEXPAND, 1);
	BitmapButton9 = new wxBitmapButton(Panel_Text3, ID_BITMAPBUTTON27, padlock16x16_blue_xpm, wxDefaultPosition, wxSize(13,13), wxBU_AUTODRAW|wxNO_BORDER, wxDefaultValidator, _T("ID_BITMAPBUTTON27"));
	BitmapButton9->SetDefault();
	BitmapButton9->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_ACTIVECAPTION));
	FlexGridSizer25->Add(BitmapButton9, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
	StaticText16 = new wxStaticText(Panel_Text3, ID_STATICTEXT17, _("Effect"), wxDefaultPosition, wxDefaultSize, 0, _T("ID_STATICTEXT17"));
	FlexGridSizer25->Add(StaticText16, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 2);
	Choice_Text_Effect3 = new wxChoice(Panel_Text3, ID_CHOICE_Text_Effect3, wxDefaultPosition, wxDefaultSize, 0, 0, 0, wxDefaultValidator, _T("ID_CHOICE_Text_Effect3"));
	Choice_Text_Effect3->SetSelection( Choice_Text_Effect3->Append(_("normal")) );
	Choice_Text_Effect3->Append(_("vert text up"));
	Choice_Text_Effect3->Append(_("vert text down"));
	Choice_Text_Effect3->Append(_("rotate up 45"));
	Choice_Text_Effect3->Append(_("rotate up 90"));
	Choice_Text_Effect3->Append(_("rotate down 45"));
	Choice_Text_Effect3->Append(_("rotate down 90"));
	FlexGridSizer25->Add(Choice_Text_Effect3, 1, wxALL|wxEXPAND, 2);
	BitmapButton_TextEffect3 = new wxBitmapButton(Panel_Text3, ID_BITMAPBUTTON_CHOICE_Text_Effect3, padlock16x16_blue_xpm, wxDefaultPosition, wxSize(13,13), wxBU_AUTODRAW|wxNO_BORDER, wxDefaultValidator, _T("ID_BITMAPBUTTON_CHOICE_Text_Effect3"));
	BitmapButton_TextEffect3->SetDefault();
	BitmapButton_TextEffect3->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_ACTIVECAPTION));
	FlexGridSizer25->Add(BitmapButton_TextEffect3, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 1);
	StaticText17 = new wxStaticText(Panel_Text3, ID_STATICTEXT18, _("Count down"), wxDefaultPosition, wxDefaultSize, 0, _T("ID_STATICTEXT18"));
	FlexGridSizer25->Add(StaticText17, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 2);
	Choice_Text_Count3 = new wxChoice(Panel_Text3, ID_CHOICE_Text_Count3, wxDefaultPosition, wxDefaultSize, 0, 0, 0, wxDefaultValidator, _T("ID_CHOICE_Text_Count3"));
	Choice_Text_Count3->SetSelection( Choice_Text_Count3->Append(_("none")) );
	Choice_Text_Count3->Append(_("seconds"));
	Choice_Text_Count3->Append(_("to date \'d h m s\'"));
	Choice_Text_Count3->Append(_("to date \'h:m:s\'"));
	Choice_Text_Count3->Append(_("to date \'m\' or \'s\'"));
	Choice_Text_Count3->Append(_("to date \'s\'"));
	Choice_Text_Count3->Append(_("!to date!%fmt"));
	FlexGridSizer25->Add(Choice_Text_Count3, 1, wxALL|wxEXPAND, 2);
	BitmapButton_TextCount3 = new wxBitmapButton(Panel_Text3, ID_BITMAPBUTTON_CHOICE_Text_Count3, padlock16x16_blue_xpm, wxDefaultPosition, wxSize(13,13), wxBU_AUTODRAW|wxNO_BORDER, wxDefaultValidator, _T("ID_BITMAPBUTTON_CHOICE_Text_Count3"));
	BitmapButton_TextCount3->SetDefault();
	BitmapButton_TextCount3->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_ACTIVECAPTION));
	FlexGridSizer25->Add(BitmapButton_TextCount3, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 1);
	StaticText18 = new wxStaticText(Panel_Text3, ID_STATICTEXT19, _("Position"), wxDefaultPosition, wxDefaultSize, 0, _T("ID_STATICTEXT19"));
	FlexGridSizer25->Add(StaticText18, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 2);
	FlexGridSizer121 = new wxFlexGridSizer(0, 2, 0, 0);
	FlexGridSizer121->AddGrowableCol(0);
	Slider_Text_Position3 = new wxSlider(Panel_Text3, ID_SLIDER_Text_Position3, 50, 0, 100, wxDefaultPosition, wxSize(177,24), 0, wxDefaultValidator, _T("ID_SLIDER_Text_Position3"));
	FlexGridSizer121->Add(Slider_Text_Position3, 1, wxALL|wxEXPAND, 2);
	TextCtrl13 = new wxTextCtrl(Panel_Text3, IDD_TEXTCTRL_Text_Position3, _("50"), wxDefaultPosition, wxDLG_UNIT(Panel_Text3,wxSize(20,-1)), 0, wxDefaultValidator, _T("IDD_TEXTCTRL_Text_Position3"));
	TextCtrl13->SetMaxLength(3);
	FlexGridSizer121->Add(TextCtrl13, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
	FlexGridSizer25->Add(FlexGridSizer121, 1, wxALL|wxEXPAND, 1);
	BitmapButton_TextPosition3 = new wxBitmapButton(Panel_Text3, ID_BITMAPBUTTON_SLIDER_Text_Position3, padlock16x16_blue_xpm, wxDefaultPosition, wxSize(13,13), wxBU_AUTODRAW|wxNO_BORDER, wxDefaultValidator, _T("ID_BITMAPBUTTON_SLIDER_Text_Position3"));
	BitmapButton_TextPosition3->SetDefault();
	BitmapButton_TextPosition3->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_ACTIVECAPTION));
	FlexGridSizer25->Add(BitmapButton_TextPosition3, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 1);
	Panel_Text3->SetSizer(FlexGridSizer25);
	FlexGridSizer25->Fit(Panel_Text3);
	FlexGridSizer25->SetSizeHints(Panel_Text3);
	Panel_Text4 = new wxPanel(Notebook_Text1, ID_PANEL_Text4, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL, _T("ID_PANEL_Text4"));
	FlexGridSizer29 = new wxFlexGridSizer(0, 3, 0, 0);
	FlexGridSizer29->AddGrowableCol(1);
	StaticText20 = new wxStaticText(Panel_Text4, ID_STATICTEXT23, _("Text"), wxDefaultPosition, wxDefaultSize, 0, _T("ID_STATICTEXT23"));
	FlexGridSizer29->Add(StaticText20, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 2);
	TextCtrl_Text_Line4 = new wxTextCtrl(Panel_Text4, ID_TEXTCTRL_Text_Line4, wxEmptyString, wxDefaultPosition, wxDefaultSize, wxTE_PROCESS_ENTER, wxDefaultValidator, _T("ID_TEXTCTRL_Text_Line4"));
	TextCtrl_Text_Line4->SetMaxLength(256);
	FlexGridSizer29->Add(TextCtrl_Text_Line4, 1, wxALL|wxEXPAND, 2);
	FlexGridSizer29->Add(-1,-1,1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
	StaticText165 = new wxStaticText(Panel_Text4, wxID_ANY, _("Font"), wxDefaultPosition, wxDefaultSize, 0, _T("wxID_ANY"));
	FlexGridSizer29->Add(StaticText165, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 2);
	FontPickerCtrl4 = new wxFontPickerCtrl(Panel_Text4, ID_FONTPICKER_Text_Font4, wxNullFont, wxDefaultPosition, wxDefaultSize, wxFNTP_FONTDESC_AS_LABEL|wxFNTP_USEFONT_FOR_LABEL, wxDefaultValidator, _T("ID_FONTPICKER_Text_Font4"));
	FlexGridSizer29->Add(FontPickerCtrl4, 1, wxALL|wxEXPAND, 2);
	BitmapButton_TextFont4 = new wxBitmapButton(Panel_Text4, ID_BITMAPBUTTON_FONTPICKER_Text_Font4, padlock16x16_blue_xpm, wxDefaultPosition, wxSize(13,13), wxBU_AUTODRAW|wxNO_BORDER, wxDefaultValidator, _T("ID_BITMAPBUTTON_FONTPICKER_Text_Font4"));
	BitmapButton_TextFont4->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_ACTIVECAPTION));
	FlexGridSizer29->Add(BitmapButton_TextFont4, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 1);
	StaticText22 = new wxStaticText(Panel_Text4, ID_STATICTEXT24, _("Movement"), wxDefaultPosition, wxDefaultSize, 0, _T("ID_STATICTEXT24"));
	FlexGridSizer29->Add(StaticText22, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 2);
	FlexGridSizer52 = new wxFlexGridSizer(0, 3, 0, 0);
	Choice_Text_Dir4 = new wxChoice(Panel_Text4, ID_CHOICE_Text_Dir4, wxDefaultPosition, wxDefaultSize, 0, 0, 0, wxDefaultValidator, _T("ID_CHOICE_Text_Dir4"));
	Choice_Text_Dir4->SetSelection( Choice_Text_Dir4->Append(_("left")) );
	Choice_Text_Dir4->Append(_("right"));
	Choice_Text_Dir4->Append(_("up"));
	Choice_Text_Dir4->Append(_("down"));
	Choice_Text_Dir4->Append(_("none"));
	Choice_Text_Dir4->Append(_("up-left"));
	Choice_Text_Dir4->Append(_("down-left"));
	Choice_Text_Dir4->Append(_("up-right"));
	Choice_Text_Dir4->Append(_("down-right"));
	Choice_Text_Dir4->Append(_("wavey L-R/up-down"));
	FlexGridSizer52->Add(Choice_Text_Dir4, 1, wxALL|wxEXPAND, 2);
	BitmapButton_TextDir4 = new wxBitmapButton(Panel_Text4, ID_BITMAPBUTTON_CHOICE_Text_Dir4, padlock16x16_blue_xpm, wxDefaultPosition, wxSize(13,13), wxBU_AUTODRAW|wxNO_BORDER, wxDefaultValidator, _T("ID_BITMAPBUTTON_CHOICE_Text_Dir4"));
	BitmapButton_TextDir4->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_ACTIVECAPTION));
	FlexGridSizer52->Add(BitmapButton_TextDir4, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 1);
	CheckBox_TextToCenter4 = new wxCheckBox(Panel_Text4, ID_CHECKBOX_TextToCenter4, _("C"), wxDefaultPosition, wxDefaultSize, 0, wxDefaultValidator, _T("ID_CHECKBOX_TextToCenter4"));
	CheckBox_TextToCenter4->SetValue(false);
	CheckBox_TextToCenter4->SetToolTip(_("Move to center and stop"));
	FlexGridSizer52->Add(CheckBox_TextToCenter4, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
	FlexGridSizer29->Add(FlexGridSizer52, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 1);
	BitmapButton_TextToCenter4 = new wxBitmapButton(Panel_Text4, ID_BITMAPBUTTON_TextToCenter4, padlock16x16_blue_xpm, wxDefaultPosition, wxSize(13,13), wxBU_AUTODRAW|wxNO_BORDER, wxDefaultValidator, _T("ID_BITMAPBUTTON_TextToCenter4"));
	BitmapButton_TextToCenter4->SetDefault();
	BitmapButton_TextToCenter4->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_ACTIVECAPTION));
	FlexGridSizer29->Add(BitmapButton_TextToCenter4, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
	StaticText188 = new wxStaticText(Panel_Text4, ID_STATICTEXT31, _("Speed"), wxDefaultPosition, wxDefaultSize, 0, _T("ID_STATICTEXT31"));
	FlexGridSizer29->Add(StaticText188, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 2);
	FlexGridSizer131 = new wxFlexGridSizer(0, 2, 0, 0);
	FlexGridSizer131->AddGrowableCol(0);
	Slider28 = new wxSlider(Panel_Text4, IDD_SLIDER_Text_Speed4, 10, 0, 50, wxDefaultPosition, wxDefaultSize, 0, wxDefaultValidator, _T("IDD_SLIDER_Text_Speed4"));
	FlexGridSizer131->Add(Slider28, 1, wxALL|wxEXPAND, 1);
	TextCtrl74 = new wxTextCtrl(Panel_Text4, ID_TEXTCTRL_Text_Speed4, _("10"), wxDefaultPosition, wxDLG_UNIT(Panel_Text4,wxSize(20,-1)), 0, wxDefaultValidator, _T("ID_TEXTCTRL_Text_Speed4"));
	TextCtrl74->SetMaxLength(3);
	FlexGridSizer131->Add(TextCtrl74, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
	FlexGridSizer29->Add(FlexGridSizer131, 1, wxALL|wxEXPAND, 1);
	BitmapButton10 = new wxBitmapButton(Panel_Text4, ID_BITMAPBUTTON28, padlock16x16_blue_xpm, wxDefaultPosition, wxSize(13,13), wxBU_AUTODRAW|wxNO_BORDER, wxDefaultValidator, _T("ID_BITMAPBUTTON28"));
	BitmapButton10->SetDefault();
	BitmapButton10->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_ACTIVECAPTION));
	FlexGridSizer29->Add(BitmapButton10, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
	StaticText29 = new wxStaticText(Panel_Text4, ID_STATICTEXT29, _("Effect"), wxDefaultPosition, wxDefaultSize, 0, _T("ID_STATICTEXT29"));
	FlexGridSizer29->Add(StaticText29, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 2);
	Choice_Text_Effect4 = new wxChoice(Panel_Text4, ID_CHOICE_Text_Effect4, wxDefaultPosition, wxDefaultSize, 0, 0, 0, wxDefaultValidator, _T("ID_CHOICE_Text_Effect4"));
	Choice_Text_Effect4->SetSelection( Choice_Text_Effect4->Append(_("normal")) );
	Choice_Text_Effect4->Append(_("vert text up"));
	Choice_Text_Effect4->Append(_("vert text down"));
	Choice_Text_Effect4->Append(_("rotate up 45"));
	Choice_Text_Effect4->Append(_("rotate up 90"));
	Choice_Text_Effect4->Append(_("rotate down 45"));
	Choice_Text_Effect4->Append(_("rotate down 90"));
	FlexGridSizer29->Add(Choice_Text_Effect4, 1, wxALL|wxEXPAND, 2);
	BitmapButton_TextEffect4 = new wxBitmapButton(Panel_Text4, ID_BITMAPBUTTON_CHOICE_Text_Effect4, padlock16x16_blue_xpm, wxDefaultPosition, wxSize(13,13), wxBU_AUTODRAW|wxNO_BORDER, wxDefaultValidator, _T("ID_BITMAPBUTTON_CHOICE_Text_Effect4"));
	BitmapButton_TextEffect4->SetDefault();
	BitmapButton_TextEffect4->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_ACTIVECAPTION));
	FlexGridSizer29->Add(BitmapButton_TextEffect4, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 1);
	StaticText42 = new wxStaticText(Panel_Text4, ID_STATICTEXT47, _("Count down"), wxDefaultPosition, wxDefaultSize, 0, _T("ID_STATICTEXT47"));
	FlexGridSizer29->Add(StaticText42, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 2);
	Choice_Text_Count4 = new wxChoice(Panel_Text4, ID_CHOICE_Text_Count4, wxDefaultPosition, wxDefaultSize, 0, 0, 0, wxDefaultValidator, _T("ID_CHOICE_Text_Count4"));
	Choice_Text_Count4->SetSelection( Choice_Text_Count4->Append(_("none")) );
	Choice_Text_Count4->Append(_("seconds"));
	Choice_Text_Count4->Append(_("to date \'d h m s\'"));
	Choice_Text_Count4->Append(_("to date \'h:m:s\'"));
	Choice_Text_Count4->Append(_("to date \'m\' or \'s\'"));
	Choice_Text_Count4->Append(_("to date \'s\'"));
	Choice_Text_Count4->Append(_("!to date!%fmt"));
	FlexGridSizer29->Add(Choice_Text_Count4, 1, wxALL|wxEXPAND, 2);
	BitmapButton_TextCount4 = new wxBitmapButton(Panel_Text4, ID_BITMAPBUTTON_CHOICE_Text_Count4, padlock16x16_blue_xpm, wxDefaultPosition, wxSize(13,13), wxBU_AUTODRAW|wxNO_BORDER, wxDefaultValidator, _T("ID_BITMAPBUTTON_CHOICE_Text_Count4"));
	BitmapButton_TextCount4->SetDefault();
	BitmapButton_TextCount4->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_ACTIVECAPTION));
	FlexGridSizer29->Add(BitmapButton_TextCount4, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 1);
	StaticText44 = new wxStaticText(Panel_Text4, ID_STATICTEXT48, _("Position"), wxDefaultPosition, wxDefaultSize, 0, _T("ID_STATICTEXT48"));
	FlexGridSizer29->Add(StaticText44, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 2);
	FlexGridSizer122 = new wxFlexGridSizer(0, 2, 0, 0);
	FlexGridSizer122->AddGrowableCol(0);
	Slider_Text_Position4 = new wxSlider(Panel_Text4, ID_SLIDER_Text_Position4, 50, 0, 100, wxDefaultPosition, wxDefaultSize, 0, wxDefaultValidator, _T("ID_SLIDER_Text_Position4"));
	FlexGridSizer122->Add(Slider_Text_Position4, 1, wxALL|wxEXPAND, 2);
	TextCtrl14 = new wxTextCtrl(Panel_Text4, IDD_TEXTCTRL_Text_Position4, _("50"), wxDefaultPosition, wxDLG_UNIT(Panel_Text4,wxSize(20,-1)), 0, wxDefaultValidator, _T("IDD_TEXTCTRL_Text_Position4"));
	TextCtrl14->SetMaxLength(3);
	FlexGridSizer122->Add(TextCtrl14, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
	FlexGridSizer29->Add(FlexGridSizer122, 1, wxALL|wxEXPAND, 1);
	BitmapButton_TextPosition4 = new wxBitmapButton(Panel_Text4, ID_BITMAPBUTTON_SLIDER_Text_Position4, padlock16x16_blue_xpm, wxDefaultPosition, wxSize(13,13), wxBU_AUTODRAW|wxNO_BORDER, wxDefaultValidator, _T("ID_BITMAPBUTTON_SLIDER_Text_Position4"));
	BitmapButton_TextPosition4->SetDefault();
	BitmapButton_TextPosition4->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_ACTIVECAPTION));
	FlexGridSizer29->Add(BitmapButton_TextPosition4, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 1);
	Panel_Text4->SetSizer(FlexGridSizer29);
	FlexGridSizer29->Fit(Panel_Text4);
	FlexGridSizer29->SetSizeHints(Panel_Text4);
	Notebook_Text1->AddPage(Panel_Text1, _("Line1"), false);
	Notebook_Text1->AddPage(Panel_Text2, _("Line2"), false);
	Notebook_Text1->AddPage(Panel_Text3, _("Line3"), false);
	Notebook_Text1->AddPage(Panel_Text4, _("Line4"), false);
	FlexGridSizer46->Add(Notebook_Text1, 0, wxEXPAND, 0);
	SetSizer(FlexGridSizer46);
	FlexGridSizer46->Fit(this);
	FlexGridSizer46->SetSizeHints(this);

	Connect(ID_BITMAPBUTTON_FONTPICKER_Text_Font1,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&TextPanel::OnLockButtonClick);
	Connect(ID_BITMAPBUTTON_CHOICE_Text_Dir1,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&TextPanel::OnLockButtonClick);
	Connect(ID_BITMAPBUTTON_TextToCenter1,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&TextPanel::OnLockButtonClick);
	Connect(IDD_SLIDER_Text_Speed1,wxEVT_COMMAND_SLIDER_UPDATED,(wxObjectEventFunction)&TextPanel::UpdateLinkedTextCtrl);
	Connect(ID_TEXTCTRL_Text_Speed1,wxEVT_COMMAND_TEXT_UPDATED,(wxObjectEventFunction)&TextPanel::UpdateLinkedSlider);
	Connect(ID_BITMAPBUTTON30,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&TextPanel::OnLockButtonClick);
	Connect(ID_BITMAPBUTTON_CHOICE_Text_Effect1,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&TextPanel::OnLockButtonClick);
	Connect(ID_BITMAPBUTTON_CHOICE_Text_Count1,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&TextPanel::OnLockButtonClick);
	Connect(ID_SLIDER_Text_XStart1,wxEVT_COMMAND_SLIDER_UPDATED,(wxObjectEventFunction)&TextPanel::UpdateLinkedTextCtrl);
	Connect(IDD_TEXTCTRL_Text_XStart1,wxEVT_COMMAND_TEXT_UPDATED,(wxObjectEventFunction)&TextPanel::UpdateLinkedSlider);
	Connect(IDD_TEXTCTRL_Text_YStart1,wxEVT_COMMAND_TEXT_UPDATED,(wxObjectEventFunction)&TextPanel::UpdateLinkedSlider);
	Connect(ID_SLIDER_Text_YStart1,wxEVT_COMMAND_SLIDER_UPDATED,(wxObjectEventFunction)&TextPanel::UpdateLinkedTextCtrl);
	Connect(ID_SLIDER_Text_XEnd1,wxEVT_COMMAND_SLIDER_UPDATED,(wxObjectEventFunction)&TextPanel::UpdateLinkedTextCtrl);
	Connect(IDD_TEXTCTRL_Text_XEnd1,wxEVT_COMMAND_TEXT_UPDATED,(wxObjectEventFunction)&TextPanel::UpdateLinkedSlider);
	Connect(IDD_TEXTCTRL_Text_YEnd1,wxEVT_COMMAND_TEXT_UPDATED,(wxObjectEventFunction)&TextPanel::UpdateLinkedSlider);
	Connect(ID_SLIDER_Text_YEnd1,wxEVT_COMMAND_SLIDER_UPDATED,(wxObjectEventFunction)&TextPanel::UpdateLinkedTextCtrl);
	Connect(ID_BITMAPBUTTON_FONTPICKER_Text_Font2,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&TextPanel::OnLockButtonClick);
	Connect(ID_BITMAPBUTTON_CHOICE_Text_Dir2,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&TextPanel::OnLockButtonClick);
	Connect(ID_BITMAPBUTTON_Text2Center2,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&TextPanel::OnLockButtonClick);
	Connect(IDD_SLIDER_Text_Speed2,wxEVT_COMMAND_SLIDER_UPDATED,(wxObjectEventFunction)&TextPanel::UpdateLinkedTextCtrl);
	Connect(ID_TEXTCTRL_Text_Speed2,wxEVT_COMMAND_TEXT_UPDATED,(wxObjectEventFunction)&TextPanel::UpdateLinkedSlider);
	Connect(ID_BITMAPBUTTON29,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&TextPanel::OnLockButtonClick);
	Connect(ID_BITMAPBUTTON_CHOICE_Text_Effect2,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&TextPanel::OnLockButtonClick);
	Connect(ID_BITMAPBUTTON_CHOICE_Text_Count2,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&TextPanel::OnLockButtonClick);
	Connect(ID_SLIDER_Text_Position2,wxEVT_COMMAND_SLIDER_UPDATED,(wxObjectEventFunction)&TextPanel::UpdateLinkedTextCtrl);
	Connect(IDD_TEXTCTRL_Text_Position2,wxEVT_COMMAND_TEXT_UPDATED,(wxObjectEventFunction)&TextPanel::UpdateLinkedSlider);
	Connect(ID_BITMAPBUTTON_SLIDER_Text_Position2,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&TextPanel::OnLockButtonClick);
	Connect(ID_BITMAPBUTTON_FONTPICKER_Text_Font3,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&TextPanel::OnLockButtonClick);
	Connect(ID_BITMAPBUTTON_CHOICE_Text_Dir3,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&TextPanel::OnLockButtonClick);
	Connect(ID_BITMAPBUTTON_TextToCenter3,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&TextPanel::OnLockButtonClick);
	Connect(IDD_SLIDER_Text_Speed3,wxEVT_COMMAND_SLIDER_UPDATED,(wxObjectEventFunction)&TextPanel::UpdateLinkedTextCtrl);
	Connect(ID_TEXTCTRL_Text_Speed3,wxEVT_COMMAND_TEXT_UPDATED,(wxObjectEventFunction)&TextPanel::UpdateLinkedSlider);
	Connect(ID_BITMAPBUTTON27,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&TextPanel::OnLockButtonClick);
	Connect(ID_BITMAPBUTTON_CHOICE_Text_Effect3,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&TextPanel::OnLockButtonClick);
	Connect(ID_BITMAPBUTTON_CHOICE_Text_Count3,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&TextPanel::OnLockButtonClick);
	Connect(ID_SLIDER_Text_Position3,wxEVT_COMMAND_SLIDER_UPDATED,(wxObjectEventFunction)&TextPanel::UpdateLinkedTextCtrl);
	Connect(IDD_TEXTCTRL_Text_Position3,wxEVT_COMMAND_TEXT_UPDATED,(wxObjectEventFunction)&TextPanel::UpdateLinkedSlider);
	Connect(ID_BITMAPBUTTON_SLIDER_Text_Position3,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&TextPanel::OnLockButtonClick);
	Connect(ID_BITMAPBUTTON_FONTPICKER_Text_Font4,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&TextPanel::OnLockButtonClick);
	Connect(ID_BITMAPBUTTON_CHOICE_Text_Dir4,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&TextPanel::OnLockButtonClick);
	Connect(ID_BITMAPBUTTON_TextToCenter4,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&TextPanel::OnLockButtonClick);
	Connect(IDD_SLIDER_Text_Speed4,wxEVT_COMMAND_SLIDER_UPDATED,(wxObjectEventFunction)&TextPanel::UpdateLinkedTextCtrl);
	Connect(ID_TEXTCTRL_Text_Speed4,wxEVT_COMMAND_TEXT_UPDATED,(wxObjectEventFunction)&TextPanel::UpdateLinkedSlider);
	Connect(ID_BITMAPBUTTON28,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&TextPanel::OnLockButtonClick);
	Connect(ID_BITMAPBUTTON_CHOICE_Text_Effect4,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&TextPanel::OnLockButtonClick);
	Connect(ID_BITMAPBUTTON_CHOICE_Text_Count4,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&TextPanel::OnLockButtonClick);
	Connect(ID_SLIDER_Text_Position4,wxEVT_COMMAND_SLIDER_UPDATED,(wxObjectEventFunction)&TextPanel::UpdateLinkedTextCtrl);
	Connect(IDD_TEXTCTRL_Text_Position4,wxEVT_COMMAND_TEXT_UPDATED,(wxObjectEventFunction)&TextPanel::UpdateLinkedSlider);
	Connect(ID_BITMAPBUTTON_SLIDER_Text_Position4,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&TextPanel::OnLockButtonClick);
	//*)
    SetName("ID_PANEL_TEXT");
}

TextPanel::~TextPanel()
{
	//(*Destroy(TextPanel)
	//*)
}

PANEL_EVENT_HANDLERS(TextPanel)